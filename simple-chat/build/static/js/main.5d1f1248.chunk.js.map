{"version":3,"sources":["hooks/useLocalStorage.js","components/Login.js","contexts/ContactsProvider.js","contexts/SocketProvider.js","contexts/ConversationsProvider.js","components/OpenConversation.js","components/Conversations.js","components/Contacts.js","components/NewConversationModal.js","components/NewContactModal.js","components/Sidebar.js","components/Dashboard.js","components/App.js","index.js"],"names":["useLocalStorage","key","inintialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Login","onIdSubmit","idRef","useRef","Container","className","style","height","Form","onSubmit","e","preventDefault","current","Group","Label","Control","type","ref","required","Button","onClick","uuidv4","variant","ContactsContext","React","createContext","useContacts","useContext","ContactsProvider","children","contacts","setContacts","Provider","createContact","id","name","prevContacts","SocketContext","SocketProvider","socket","setScoket","newSocket","io","querry","close","ConversationsContext","useConversations","ConversationsProvider","conversations","setConversations","selectedConversationIndex","setSelectedConversationIndex","addMessageToConversation","useCallback","recipients","text","sender","prevConversations","madeChange","newMessage","newConversations","map","conversation","a","b","length","sort","every","element","index","messages","on","off","formattedConversations","recipient","contact","find","message","fromMe","senderName","selected","selectedConversation","sendMessage","emit","selectConversationIndex","createConversation","OpenConversation","setText","setRef","node","scrollIntoView","smooth","lastMessage","r","InputGroup","as","onChange","target","resize","Append","Conversations","ListGroup","Item","action","active","join","Contacts","NewConversationModal","closeModal","selectedContactIds","setSelectedContactIds","Modal","Header","closeButton","Body","controlId","Check","includes","label","contactId","prevSelectedContactIds","filter","prevId","NewContactModal","nameRef","CONVERSATIONS_KEY","CONTACS_KEY","Sidebar","activeKey","setActiveKey","modalOpen","setModalOpen","conversationsOpen","width","Tab","onSelect","Nav","Link","eventKey","Content","Pane","show","onHide","Dashboard","App","setId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d1f1248.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"chatapp-\";\r\n\r\nexport default function useLocalStorage(key, inintialValue) {\r\n\tconst prefixedKey = PREFIX + key;\r\n\tconst [value, setValue] = useState(() => {\r\n\t\tconst jsonValue = localStorage.getItem(prefixedKey);\r\n\t\tif (jsonValue != null) return JSON.parse(jsonValue);\r\n\t\tif (typeof inintialValue === \"function\") {\r\n\t\t\treturn inintialValue();\r\n\t\t} else {\r\n\t\t\treturn inintialValue;\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(prefixedKey, JSON.stringify(value));\r\n\t}, [prefixedKey, value]);\r\n\r\n\treturn [value, setValue];\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport default function Login({ onIdSubmit }) {\r\n\tconst idRef = useRef();\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tonIdSubmit(idRef.current.value);\r\n\t}\r\n\r\n\tfunction createNewId() {\r\n\t\tonIdSubmit(uuidv4());\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container\r\n\t\t\tclassName=\"align-items-center d-flex\"\r\n\t\t\tstyle={{ height: \"100vh\" }}\r\n\t\t>\r\n\t\t\t<Form onSubmit={handleSubmit} className=\"w-100\">\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Enter your Id</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"text\" ref={idRef} required></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button type=\"submit\" className=\"mr-2\">\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button onClick={createNewId} variant=\"secondary\">\r\n\t\t\t\t\tCreate new id\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t</Container>\r\n\t);\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nconst ContactsContext = React.createContext();\r\n\r\nexport function useContacts() {\r\n\treturn useContext(ContactsContext);\r\n}\r\n\r\nexport function ContactsProvider({ children }) {\r\n\tconst [contacts, setContacts] = useLocalStorage(\"contacts\", []);\r\n\r\n\tfunction createContact(id, name) {\r\n\t\tsetContacts((prevContacts) => {\r\n\t\t\treturn [...prevContacts, { id, name }];\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ContactsContext.Provider value={{ contacts, createContact }}>\r\n\t\t\t{children}\r\n\t\t</ContactsContext.Provider>\r\n\t);\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n\treturn useContext(SocketContext);\r\n}\r\n\r\nexport function SocketProvider({ children, id }) {\r\n\tconst [socket, setScoket] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newSocket = io(\"http://localhost:5000\", { querry: { id } });\r\n\t\tsetScoket(newSocket);\r\n\r\n\t\treturn () => newSocket.close();\r\n\t}, [id]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SocketContext.Provider value={socket}>{children}</SocketContext.Provider>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport { useContacts } from \"./ContactsProvider\";\r\nimport { useSocket } from \"./SocketProvider\";\r\n\r\nconst ConversationsContext = React.createContext();\r\n\r\nexport function useConversations() {\r\n\treturn useContext(ConversationsContext);\r\n}\r\n\r\nexport function ConversationsProvider({ id, children }) {\r\n\tconst [conversations, setConversations] = useLocalStorage(\r\n\t\t\"conversations\",\r\n\t\t[]\r\n\t);\r\n\tconst [selectedConversationIndex, setSelectedConversationIndex] = useState(0);\r\n\tconst { contacts } = useContacts();\r\n\tconst socket = useSocket();\r\n\r\n\tfunction createConversation(recipients) {\r\n\t\tsetConversations((prevConversations) => {\r\n\t\t\treturn [...prevConversations, { recipients, messages: [] }];\r\n\t\t});\r\n\t}\r\n\r\n\tconst addMessageToConversation = useCallback(\r\n\t\t({ recipients, text, sender }) => {\r\n\t\t\tsetConversations((prevConversations) => {\r\n\t\t\t\tlet madeChange = false;\r\n\t\t\t\tconst newMessage = { sender, text };\r\n\t\t\t\tconst newConversations = prevConversations.map((conversation) => {\r\n\t\t\t\t\tif (arrayEquality(conversation.recipients, recipients)) {\r\n\t\t\t\t\t\tmadeChange = true;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...conversation,\r\n\t\t\t\t\t\t\tmessages: [...conversation.messages, newMessage],\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn conversation;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (madeChange) {\r\n\t\t\t\t\treturn newConversations;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [...prevConversations, { recipients, messages: [newMessage] }];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t[setConversations]\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socket == null) return;\r\n\r\n\t\tsocket.on(\"receive-message\", addMessageToConversation);\r\n\r\n\t\treturn () => socket.off(\"receive-message\");\r\n\t}, [socket, addMessageToConversation]);\r\n\r\n\tfunction sendMessage(recipients, text) {\r\n\t\tsocket.emit(\"send-message\", { recipients, text });\r\n\r\n\t\taddMessageToConversation({ recipients, text, sender: id });\r\n\t}\r\n\r\n\tconst formattedConversations = conversations.map((conversation, index) => {\r\n\t\tconst recipients = conversation.recipients.map((recipient) => {\r\n\t\t\tconst contact = contacts.find((contact) => {\r\n\t\t\t\treturn contact.id === recipient;\r\n\t\t\t});\r\n\t\t\tconst name = (contact && contact.name) || recipient;\r\n\t\t\treturn { id: recipient, name };\r\n\t\t});\r\n\r\n\t\tconst messages = conversation.messages.map((message) => {\r\n\t\t\tconst contact = contacts.find((contact) => {\r\n\t\t\t\treturn contact.id === message.sender;\r\n\t\t\t});\r\n\t\t\tconst name = (contact && contact.name) || message.sender;\r\n\t\t\tconst fromMe = id === message.sender;\r\n\t\t\treturn { ...message, senderName: name, fromMe };\r\n\t\t});\r\n\r\n\t\tconst selected = index === selectedConversationIndex;\r\n\t\treturn { ...conversation, messages, recipients, selected };\r\n\t});\r\n\r\n\tconst value = {\r\n\t\tconversations: formattedConversations,\r\n\t\tselectedConversation: formattedConversations[selectedConversationIndex],\r\n\t\tsendMessage,\r\n\t\tselectConversationIndex: setSelectedConversationIndex,\r\n\t\tcreateConversation,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ConversationsContext.Provider value={value}>\r\n\t\t\t{children}\r\n\t\t</ConversationsContext.Provider>\r\n\t);\r\n}\r\n\r\nfunction arrayEquality(a, b) {\r\n\tif (a.length !== b.length) return false;\r\n\r\n\ta.sort();\r\n\tb.sort();\r\n\r\n\treturn a.every((element, index) => {\r\n\t\treturn element === b[index];\r\n\t});\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { useConversations } from \"../contexts/ConversationsProvider\";\r\n\r\nexport default function OpenConversation() {\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst setRef = useCallback((node) => {\r\n\t\tif (node) {\r\n\t\t\tnode.scrollIntoView({ smooth: true });\r\n\t\t}\r\n\t}, []);\r\n\tconst { sendMessage, selectedConversation } = useConversations();\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tsendMessage(\r\n\t\t\tselectedConversation.recipients.map((r) => r.id),\r\n\t\t\ttext\r\n\t\t);\r\n\t\tsetText(\"\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex flex-column flex-grow-1\">\r\n\t\t\t<div className=\"flex-grow-1 overflow-auto\">\r\n\t\t\t\t<div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\r\n\t\t\t\t\t{selectedConversation.messages.map((message, index) => {\r\n\t\t\t\t\t\tconst lastMessage =\r\n\t\t\t\t\t\t\tselectedConversation.messages.length - 1 === index;\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tref={lastMessage ? setRef : null}\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tclassName={`my-1 d-flex flex-column ${\r\n\t\t\t\t\t\t\t\t\tmessage.fromMe\r\n\t\t\t\t\t\t\t\t\t\t? \"align-self-end align-items-end\"\r\n\t\t\t\t\t\t\t\t\t\t: \"align-items-start\"\r\n\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={`rounded px-2 py-1 ${\r\n\t\t\t\t\t\t\t\t\t\tmessage.fromMe ? \"bg-primary text-white\" : \"border\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{message.text}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={`text-muted small ${\r\n\t\t\t\t\t\t\t\t\t\tmessage.fromMe ? \"text-right\" : \"\"\r\n\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{message.fromMe ? \"You\" : message.senderName}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<Form.Group className=\"m-2\">\r\n\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\t\tonChange={(e) => setText(e.target.value)}\r\n\t\t\t\t\t\t\tstyle={{ height: \"75px\", resize: \"none\" }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t<Button type=\"submit\">Send</Button>\r\n\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t</InputGroup>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useConversations } from \"../contexts/ConversationsProvider\";\r\n\r\nexport default function Conversations() {\r\n\tconst { conversations, selectConversationIndex } = useConversations();\r\n\r\n\treturn (\r\n\t\t<ListGroup variant=\"flush\">\r\n\t\t\t{conversations.map((conversation, index) => (\r\n\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\taction\r\n\t\t\t\t\tonClick={() => selectConversationIndex(index)}\r\n\t\t\t\t\tactive={conversation.selected}\r\n\t\t\t\t>\r\n\t\t\t\t\t{conversation.recipients.map((r) => r.name).join(\", \")}\r\n\t\t\t\t</ListGroup.Item>\r\n\t\t\t))}\r\n\t\t</ListGroup>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { useContacts } from \"../contexts/ContactsProvider\";\r\n\r\nexport default function Contacts() {\r\n\tconst { contacts } = useContacts();\r\n\r\n\treturn (\r\n\t\t<ListGroup variant=\"flush\">\r\n\t\t\t{contacts.map((contact) => (\r\n\t\t\t\t<ListGroup.Item key={contact.id}>{contact.name}</ListGroup.Item>\r\n\t\t\t))}\r\n\t\t</ListGroup>\r\n\t);\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Modal, Button } from \"react-bootstrap\";\r\nimport { useContacts } from \"../contexts/ContactsProvider\";\r\nimport { useConversations } from \"../contexts/ConversationsProvider\";\r\n\r\nexport default function NewConversationModal({ closeModal }) {\r\n\tconst [selectedContactIds, setSelectedContactIds] = useState([]);\r\n\tconst { contacts } = useContacts();\r\n\tconst { createConversation } = useConversations();\r\n\r\n\tfunction handleCheckBoxChange(contactId) {\r\n\t\tsetSelectedContactIds((prevSelectedContactIds) => {\r\n\t\t\tif (prevSelectedContactIds.includes(contactId)) {\r\n\t\t\t\treturn prevSelectedContactIds.filter((prevId) => {\r\n\t\t\t\t\treturn contactId !== prevId;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn [...prevSelectedContactIds, contactId];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tcreateConversation(selectedContactIds);\r\n\t\tcloseModal();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal.Header closeButton>Create Conversation</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t{contacts.map((contact) => (\r\n\t\t\t\t\t\t<Form.Group controlId={contact.id} key={contact.id}>\r\n\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\tvalue={selectedContactIds.includes(contact.id)}\r\n\t\t\t\t\t\t\t\tlabel={contact.name}\r\n\t\t\t\t\t\t\t\tonChange={() => handleCheckBoxChange(contact.id)}\r\n\t\t\t\t\t\t\t></Form.Check>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<Button type=\"submit\">Create</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Form, Modal, Button } from \"react-bootstrap\";\r\nimport { useContacts } from \"../contexts/ContactsProvider\";\r\n\r\nexport default function NewContactModal({ closeModal }) {\r\n\tconst idRef = useRef();\r\n\tconst nameRef = useRef();\r\n\tconst { createContact } = useContacts();\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tcreateContact(idRef.current.value, nameRef.current.value);\r\n\t\tcloseModal();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal.Header closeButton>Create Contact</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label>Id</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"text\" ref={idRef} required></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"text\" ref={nameRef} required></Form.Control>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button type=\"submit\">Create</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Modal.Body>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Tab, Nav, Button, Modal } from \"react-bootstrap\";\r\nimport Conversations from \"./Conversations\";\r\nimport Contacts from \"./Contacts\";\r\nimport NewConversationModal from \"./NewConversationModal\";\r\nimport NewContactModal from \"./NewContactModal\";\r\n\r\nconst CONVERSATIONS_KEY = \"conversations\";\r\nconst CONTACS_KEY = \"contacs\";\r\n\r\nexport default function Sidebar({ id }) {\r\n\tconst [activeKey, setActiveKey] = useState(CONVERSATIONS_KEY);\r\n\tconst [modalOpen, setModalOpen] = useState(false);\r\n\r\n\tfunction closeModal() {\r\n\t\tsetModalOpen(false);\r\n\t}\r\n\r\n\tconst conversationsOpen = activeKey === CONVERSATIONS_KEY;\r\n\r\n\treturn (\r\n\t\t<div style={{ width: \"250px\" }} className=\"d-flex flex-column\">\r\n\t\t\t<Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\r\n\t\t\t\t<Nav variant=\"tabs\" className=\"justify-content-center\">\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey={CONVERSATIONS_KEY}>Conversations</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t<Nav.Link eventKey={CONTACS_KEY}>Contacts</Nav.Link>\r\n\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t</Nav>\r\n\t\t\t\t<Tab.Content className=\"border-right overflow-auto flex-grow-1\">\r\n\t\t\t\t\t<Tab.Pane eventKey={CONVERSATIONS_KEY}>\r\n\t\t\t\t\t\t<Conversations />\r\n\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t\t<Tab.Pane eventKey={CONTACS_KEY}>\r\n\t\t\t\t\t\t<Contacts />\r\n\t\t\t\t\t</Tab.Pane>\r\n\t\t\t\t</Tab.Content>\r\n\t\t\t\t<div className=\"p-2 border-top border-right small\">\r\n\t\t\t\t\tYour Id: <span className=\"text-muted\">{id}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button onClick={() => setModalOpen(true)} className=\"rounded-0\">\r\n\t\t\t\t\tNew {conversationsOpen ? \"Conversation\" : \"Contact\"}\r\n\t\t\t\t</Button>\r\n\t\t\t</Tab.Container>\r\n\r\n\t\t\t<Modal show={modalOpen} onHide={closeModal}>\r\n\t\t\t\t{conversationsOpen ? (\r\n\t\t\t\t\t<NewConversationModal closeModal={closeModal} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<NewContactModal closeModal={closeModal} />\r\n\t\t\t\t)}\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport OpenConversation from \"./OpenConversation\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { useConversations } from \"../contexts/ConversationsProvider\";\r\n\r\nexport default function Dashboard({ id }) {\r\n\tconst { selectedConversation } = useConversations();\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex\" style={{ height: \"100vh\" }}>\r\n\t\t\t<Sidebar id={id} />\r\n\t\t\t{selectedConversation && <OpenConversation />}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\nimport { ContactsProvider } from \"../contexts/ContactsProvider\";\nimport { ConversationsProvider } from \"../contexts/ConversationsProvider\";\nimport { SocketProvider } from \"../contexts/SocketProvider\";\n\nfunction App() {\n\tconst [id, setId] = useLocalStorage();\n\n\tconst dashboard = (\n\t\t<SocketProvider id={id}>\n\t\t\t<ContactsProvider>\n\t\t\t\t<ConversationsProvider id={id}>\n\t\t\t\t\t<Dashboard id={id} />\n\t\t\t\t</ConversationsProvider>\n\t\t\t</ContactsProvider>\n\t\t</SocketProvider>\n\t);\n\n\treturn id ? dashboard : <Login onIdSubmit={setId} />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}